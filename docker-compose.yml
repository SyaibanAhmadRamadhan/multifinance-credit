version: '3.7'

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-12-12T19-27-27Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
    # environment:
    # MINIO_ROOT_USER: 'your-access-key'
    # MINIO_ROOT_PASSWORD: 'your-secret-key'
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    depends_on:
#      mariadb:
#        condition: service_healthy
#      otel-collector:
#        condition: service_started
#    ports:
#      - "3002:3002"
#    networks:
#      - multifinance-credit
#    command: ["sh", "-c", "./app"]

  # observability setup
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    environment:
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    restart: always
    ports:
      - "9411:9411"
    networks:
      - multifinance-credit

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    restart: always
    command: [ "--config=/providerconf/otel-config.yml", "${OTELCOL_ARGS}" ]
    volumes:
      - "./otel-config.yml:/providerconf/otel-config.yml:ro"
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    environment:
      - OTEL_EXPORTER_OTLP_CLIENT_KEY=askdhuiqenfnasasdjuefhjaksdan
      - OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY=anksbfjahdhajsdyefbahjsd
      - BASIC_AUTH_USERNAME=user
      - BASIC_AUTH_PASSWORD=pw
    depends_on:
      - zipkin-all-in-one
    networks:
      - multifinance-credit

  # minio cluster setup
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - data-minio1-1:/data1
      - data-minio1-2:/data2
    networks:
      - multifinance-credit

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data-minio2-1:/data1
      - data-minio2-2:/data2
    networks:
      - multifinance-credit

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data-minio3-1:/data1
      - data-minio3-2:/data2
    networks:
      - multifinance-credit

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data-minio4-1:/data1
      - data-minio4-2:/data2
    networks:
      - multifinance-credit

  nginx-minio:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./minio-nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
    networks:
      - multifinance-credit

  # mariadb setup
  mariadb:
    image: mariadb:latest
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: multifinance-credit-db
      MYSQL_USER: multifinance-credit-user
      MYSQL_PASSWORD: multifinance-credit-pw
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - multifinance-credit

networks:
  multifinance-credit:

volumes:
  data-minio1-1:
  data-minio1-2:
  data-minio2-1:
  data-minio2-2:
  data-minio3-1:
  data-minio3-2:
  data-minio4-1:
  data-minio4-2:
  mariadb-data:
